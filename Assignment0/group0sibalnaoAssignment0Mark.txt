+++ASSIGNMENT0 MARK DETAIL+++
+++This assignment is marked by:+++
TA (name, email): Amol Dosanjh, amol.dosanjh@mail.utoronto.ca
Contact the TA directly if you have any questions on the marking
Please refer to the course syllabus for remarking window
Your mark out of 10 is: 7



PART 1) +++SVN CHECKOUT ON YOUR ASSIGNMENT0+++
A    Assignment0/src
A    Assignment0/src/a0
A    Assignment0/src/driver
A    Assignment0/test
A    Assignment0/src/a0/Cfiltering.java
A    Assignment0/src/a0/Rearranging.java
A    Assignment0/src/driver/CfilteringDriver.java
A    Assignment0/test/test1.txt
A    Assignment0/test/test2.txt
A    Assignment0/test/test3.txt
A    Assignment0/test/test4.txt
A    Assignment0/input1.txt
A    Assignment0/input2.txt
Checked out revision 45.



PART 2) +++SVN COMMIT LOGS ARE+++
------------------------------------------------------------------------
r45 | sibalnao@UTORONTO.CA | 2018-09-26 21:46:06 -0400 (Wed, 26 Sep 2018) | 1 line

modified main function
------------------------------------------------------------------------
r41 | sibalnao@UTORONTO.CA | 2018-09-26 21:14:20 -0400 (Wed, 26 Sep 2018) | 1 line

edit some of the comments
------------------------------------------------------------------------
r40 | sibalnao@UTORONTO.CA | 2018-09-26 00:37:40 -0400 (Wed, 26 Sep 2018) | 1 line

removed some blank lines in the code to make it look neat
------------------------------------------------------------------------
r39 | sibalnao@UTORONTO.CA | 2018-09-26 00:27:45 -0400 (Wed, 26 Sep 2018) | 1 line

added 4 test files in test folder
------------------------------------------------------------------------
r38 | sibalnao@UTORONTO.CA | 2018-09-26 00:15:12 -0400 (Wed, 26 Sep 2018) | 1 line

modified Cfiltering.java, Rearranging.java and CfilteringDriver.java
------------------------------------------------------------------------
r30 | sibalnao@UTORONTO.CA | 2018-09-21 12:42:24 -0400 (Fri, 21 Sep 2018) | 1 line

removed professor's comments and added findAndprintMostDissimilarPairOfUsers()
------------------------------------------------------------------------
r29 | sibalnao@UTORONTO.CA | 2018-09-21 12:36:01 -0400 (Fri, 21 Sep 2018) | 1 line

edited some comments
------------------------------------------------------------------------
r28 | sibalnao@UTORONTO.CA | 2018-09-21 12:34:22 -0400 (Fri, 21 Sep 2018) | 1 line

removed professor's comments and added findAndprintMostDissimilarPairOfUsers function call
------------------------------------------------------------------------
r27 | sibalnao@UTORONTO.CA | 2018-09-21 02:14:30 -0400 (Fri, 21 Sep 2018) | 1 line

modified findAndprintMostSimilarPairOfUsers function
------------------------------------------------------------------------
r26 | sibalnao@UTORONTO.CA | 2018-09-21 02:12:34 -0400 (Fri, 21 Sep 2018) | 1 line

added findAndprintMostSimilarPairOfUsers function call
------------------------------------------------------------------------
r25 | sibalnao@UTORONTO.CA | 2018-09-20 23:06:19 -0400 (Thu, 20 Sep 2018) | 1 line

resolved conflict state for return value in calculteSimilarityScore()
------------------------------------------------------------------------
r24 | sibalnao@UTORONTO.CA | 2018-09-20 23:05:19 -0400 (Thu, 20 Sep 2018) | 1 line

resolved conflict state for return value in calculteSimilarityScore()
------------------------------------------------------------------------
r23 | sibalnao@UTORONTO.CA | 2018-09-20 23:03:46 -0400 (Thu, 20 Sep 2018) | 1 line

updated return for calculateSimilarity()
------------------------------------------------------------------------
r22 | sibalnao@UTORONTO.CA | 2018-09-20 23:02:17 -0400 (Thu, 20 Sep 2018) | 1 line

modified CalculateSimilarity(), printUserUserMatrix() and added a help function to populate userUserMatrix
------------------------------------------------------------------------
r21 | sibalnao@UTORONTO.CA | 2018-09-20 22:59:59 -0400 (Thu, 20 Sep 2018) | 1 line

added calculateSimilarityScore and printUserUserMatrix function call
------------------------------------------------------------------------
r20 | sibalnao@UTORONTO.CA | 2018-09-20 21:54:52 -0400 (Thu, 20 Sep 2018) | 1 line

added test folder, modified Cfilering constructor in Cfiltering.java and modified some part in the driver
------------------------------------------------------------------------
r19 | sibalnao@UTORONTO.CA | 2018-09-20 21:17:16 -0400 (Thu, 20 Sep 2018) | 1 line

placed honor of code in Cfiltering.java
------------------------------------------------------------------------
r18 | sibalnao@UTORONTO.CA | 2018-09-20 21:15:57 -0400 (Thu, 20 Sep 2018) | 1 line

modified main function when printing unsorted and sorted array
------------------------------------------------------------------------
r17 | sibalnao@UTORONTO.CA | 2018-09-20 21:13:58 -0400 (Thu, 20 Sep 2018) | 1 line

modified main() function to print the elements of the array before rearranging
------------------------------------------------------------------------
r16 | sibalnao@UTORONTO.CA | 2018-09-20 21:11:21 -0400 (Thu, 20 Sep 2018) | 1 line

modified swap() function
------------------------------------------------------------------------
r15 | sibalnao@UTORONTO.CA | 2018-09-20 21:10:11 -0400 (Thu, 20 Sep 2018) | 1 line

modified rearranging() function
------------------------------------------------------------------------
r14 | sibalnao@UTORONTO.CA | 2018-09-20 21:08:21 -0400 (Thu, 20 Sep 2018) | 1 line

placed honor of code and done rearranging() function
------------------------------------------------------------------------
r8 | attarwal@UTORONTO.CA | 2018-09-19 12:15:08 -0400 (Wed, 19 Sep 2018) | 1 line

deleting src/test by instructor
------------------------------------------------------------------------
r4 | attarwal@UTORONTO.CA | 2018-09-18 04:31:25 -0400 (Tue, 18 Sep 2018) | 1 line

Starter code by instructor
------------------------------------------------------------------------
r3 | attarwal@UTORONTO.CA | 2018-09-18 04:31:24 -0400 (Tue, 18 Sep 2018) | 1 line

Starter code by instructor
------------------------------------------------------------------------
r2 | attarwal@UTORONTO.CA | 2018-09-18 04:31:23 -0400 (Tue, 18 Sep 2018) | 1 line

Starter code by instructor
------------------------------------------------------------------------
r1 | Markus | 2018-09-15 12:36:30 -0400 (Sat, 15 Sep 2018) | 1 line


------------------------------------------------------------------------
Marks Deductions here: 0



PART 3) +++FOLLOWING LINES ARE GREATER THAN 80 CHARACTERS+++
Marks Deductions here: 0



PART 4) +++TEST FOLDER WITH TEST FILES IN IT?+++
------------------------------------------------------------------------
r39 | sibalnao@UTORONTO.CA | 2018-09-26 00:27:45 -0400 (Wed, 26 Sep 2018) | 1 line

added 4 test files in test folder
------------------------------------------------------------------------
r20 | sibalnao@UTORONTO.CA | 2018-09-20 21:54:52 -0400 (Thu, 20 Sep 2018) | 1 line

added test folder, modified Cfilering constructor in Cfiltering.java and modified some part in the driver
------------------------------------------------------------------------
Marks Deductions here: 0



PART 5) +++HONOR CODE?+++
// **********************************************************
// Assignment0: Cfiltering.java
// UTORID: sibalnao
// UT Student #: 1003939786
// Author: Naomi Joy Sibal
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences. In this semester
// we will select any three of your assignments from total of 5 and run it
// for plagiarism check. 
Marks Deductions here: 0



PART 6) +++IDE FILES+++
Marks Deductions here: 0



PART 7) +++STATIC FUNCTIONS IN YOUR CODE+++
Marks Deductions here: 0



PART 8) +++COMMENTS IN cFiltering.java
Marks Deductions here: 0
// for plagiarism check. 
// *********************************************************
  // this is a 2d matrix i.e. user*movie
  // this is a 2d matrix i.e. user*user
  // default constructor
    // this is 2d matrix of size 1*1
    // this is 2d matrix of size 1*1
  // constructor with numberOfUsers, numberOfMovies parameters
  // that creates the 2d matrices
	  // this is 2d matrix of size numberOfUsers*numberOfMovies
	  // this is 2d matrix of size numberOfUsers*numberOfUsers
	  // populate the userMovieMatrix
	  // calculate the similarity scores and populate the userUserMatrix
 	  // iterate through the users
				  // get the difference of each movie rating from
				  // user1 and user 2
				  // square their difference
				  // add the squares of difference in the total movie rating
			  // get the distance by getting the square root
			  // get the similarity score by using the formula
			  // 1 / 1 + distance
			  // use the help function to populate userUserMatrix
	  // iterate through the users
			  // get each similarity scores
			  // format score to 4 decimal places
				  // check if it is the last user2 in each user 1
				  // print the comma if not
	// for printing and finding the most similar pair of users
	  // instantiate an array list of strings
	  // this will hold the maximum value of similarity scores
				  // disregard the pair with itself
					  // replace the maxSimilar with the current
					  // highest similarity score
	  // printing the most similar users and their similarity scores
	  // for printing and finding the most dissimilar pair of users
	  // instantiate an array list of strings
	  // this will hold the minimum value of similarity scores
				  // disregard the pair with itself
					  // replace the minSimilar with the current
					  // lowest similarity score
	  // printing the most similar users and their similarity scores
	// helper function that prints the pair of users
	// printing the most dis/similar users
		// get all the user number in the dissimilarUser array
		// check if it's the last user pair to avoid printing extra comma



PART 9) +++COMPILING YOUR CODE+++
Marks Deductions here: 0



+++RUNNING YOUR CODE+++
PART 10) +++RUNNING TESTCASE1+++
Marks Deductions here: 0
Enter the name of input file? 


[1.0000, 1.0000, 1.0000, 1.0000]
[1.0000, 1.0000, 1.0000, 1.0000]
[1.0000, 1.0000, 1.0000, 1.0000]
[1.0000, 1.0000, 1.0000, 1.0000]


The most similar pairs of users from above userUserMatrix are:
User1 and User2,
User1 and User3,
User1 and User4,
User2 and User3,
User2 and User4,
User3 and User4
with similarity score of 1.0000


The most dissimilar pairs of users from above userUserMatrix are:
User1 and User2,
User1 and User3,
User1 and User4,
User2 and User3,
User2 and User4,
User3 and User4
with similarity score of 1.0000



PART 11) +++RUNNING TESTCASE2+++
Marks Deductions here: 0
Enter the name of input file? 


[1.0000, 1.0000, 0.1006, 0.1006]
[1.0000, 1.0000, 0.1006, 0.1006]
[0.1006, 0.1006, 1.0000, 1.0000]
[0.1006, 0.1006, 1.0000, 1.0000]


The most similar pairs of users from above userUserMatrix are:
User1 and User2,
User3 and User4
with similarity score of 1.0000


The most dissimilar pairs of users from above userUserMatrix are:
User1 and User3,
User1 and User4,
User2 and User3,
User2 and User4
with similarity score of 0.1006



PART 12) +++RUNNING TESTCASE3+++
Marks Deductions here: 0
Enter the name of input file? 


[1.0000, 0.1082, 0.1082, 0.1082, 1.0000]
[0.1082, 1.0000, 1.0000, 1.0000, 0.1082]
[0.1082, 1.0000, 1.0000, 1.0000, 0.1082]
[0.1082, 1.0000, 1.0000, 1.0000, 0.1082]
[1.0000, 0.1082, 0.1082, 0.1082, 1.0000]


The most similar pairs of users from above userUserMatrix are:
User1 and User5,
User2 and User3,
User2 and User4,
User3 and User4
with similarity score of 1.0000


The most dissimilar pairs of users from above userUserMatrix are:
User1 and User2,
User1 and User3,
User1 and User4,
User2 and User5,
User3 and User5,
User4 and User5
with similarity score of 0.1082



Part 10) +++Working on Problem Rearranging+++
Marks Deductions here: -3
Test 2 failed
FOUND: Rearranging.java and now compiling
Note: ./src/a0/RearrangingTest.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
+++RUNNING TESTCASES+++ on Rearranging
JUnit version 4.12
.0
.0
E
Time: 0.015
There was 1 failure:
1) test2(a0.RearrangingTest)
java.lang.AssertionError: Array not correctly rearranged for {0,0,0,0,0,0,0,0,0,0,0,-7,-3,20,10,8,2,-10,-34,-45,45,78,34,1,1,1,1,0,-9}
	at org.junit.Assert.fail(Assert.java:88)
	at a0.RearrangingTest.test2(RearrangingTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)

FAILURES!!!
Tests run: 2,  Failures: 1

Part 11) +++Does your code run in linear time and not use a new array+++?
Marks Deductions here: 0
